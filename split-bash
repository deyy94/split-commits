#!/bin/bash

set -e

# Configura tu rama base (por ejemplo, main o develop)
BASE_BRANCH="main"
SOURCE_BRANCH="Ejemplo1"
LIMIT=2000

# Verifica que estás dentro de un repo Git
if ! git rev-parse --is-inside-work-tree &> /dev/null; then
  echo "❌ No estás dentro de un repositorio Git."
  exit 1
fi

# Cambia a la rama fuente
git checkout "$SOURCE_BRANCH"

# Encuentra el punto de inicio de Ejemplo1
BASE_COMMIT=$(git merge-base "$BASE_BRANCH" "$SOURCE_BRANCH")
echo "📍 Punto base entre $BASE_BRANCH y $SOURCE_BRANCH: $BASE_COMMIT"

# Obtiene todos los commits desde la creación de Ejemplo1
COMMITS=($(git rev-list --reverse "$BASE_COMMIT".."$SOURCE_BRANCH"))
echo "🔍 Total de commits: ${#COMMITS[@]}"

# Variables de control
GROUP=()
GROUP_TOTAL=0
GROUP_NUM=1

for COMMIT in "${COMMITS[@]}"; do
  # Cuántas líneas cambia este commit
  LINES=$(git show --numstat --format="" "$COMMIT" | awk '{add += $1; del += $2} END {print add + del}')
  LINES=${LINES:-0}

  if (( GROUP_TOTAL + LINES > LIMIT )); then
    # Nueva rama
    NEW_BRANCH="${SOURCE_BRANCH}-parte-${GROUP_NUM}"
    echo "🚀 Creando rama $NEW_BRANCH con $GROUP_TOTAL líneas..."
    
    git checkout -b "$NEW_BRANCH" "$BASE_COMMIT"

    for C in "${GROUP[@]}"; do
      git cherry-pick "$C"
    done

    GROUP=()
    GROUP_TOTAL=0
    GROUP_NUM=$((GROUP_NUM + 1))
  fi

  GROUP+=("$COMMIT")
  GROUP_TOTAL=$((GROUP_TOTAL + LINES))
done

# Último grupo
if (( ${#GROUP[@]} > 0 )); then
  NEW_BRANCH="${SOURCE_BRANCH}-parte-${GROUP_NUM}"
  echo "🚀 Creando rama $NEW_BRANCH con $GROUP_TOTAL líneas..."

  git checkout -b "$NEW_BRANCH" "$BASE_COMMIT"
  for C in "${GROUP[@]}"; do
    git cherry-pick "$C"
  done
fi

echo "✅ Proceso completado. Se crearon ${GROUP_NUM} ramas desde $SOURCE_BRANCH."

#!/bin/bash
set -e

BASE_BRANCH="main"
SOURCE_BRANCH="Ejemplo1"
LIMIT=2000

# 1) Validaciones básicas
if ! git rev-parse --is-inside-work-tree &>/dev/null; then
  echo "❌ No estás en un repositorio Git."
  exit 1
fi
if ! git rev-parse --verify "$SOURCE_BRANCH" &>/dev/null; then
  echo "❌ No existe la rama $SOURCE_BRANCH."
  exit 1
fi

# 2) Calcula el punto base y la lista de commits (sin merges)
BASE_COMMIT=$(git merge-base "$BASE_BRANCH" "$SOURCE_BRANCH")
COMMITS=($(git rev-list --reverse --no-merges "$BASE_COMMIT".."$SOURCE_BRANCH"))

# 3) Fase A: agrupa hashes en lotes ≤ LIMIT líneas
declare -a GROUPS
declare -a CURR
CURR_SUM=0

for C in "${COMMITS[@]}"; do
  LINES=$(git show --numstat --format="" "$C" \
    | awk '{add+=$1;del+=$2} END{print add+del}')
  LINES=${LINES:-0}

  if (( CURR_SUM + LINES > LIMIT )); then
    GROUPS+=("$(printf "%s " "${CURR[@]}")")
    CURR=(); CURR_SUM=0
  fi

  CURR+=("$C")
  CURR_SUM=$((CURR_SUM + LINES))
done
if (( CURR_SUM > 0 )); then
  GROUPS+=("$(printf "%s " "${CURR[@]}")")
fi

echo "🔍 Se formaron ${#GROUPS[@]} grupos de commits."

# 4) Fase B: crea cada rama y cherry-pick del grupo
i=1
for G in "${GROUPS[@]}"; do
  BR="${SOURCE_BRANCH}-parte-${i}"
  echo "🚀 Rama $BR con commits: $G"
  git branch "$BR" "$BASE_COMMIT"
  git checkout "$BR"

  for H in $G; do
    if ! git cherry-pick "$H" &>/dev/null; then
      echo "  ⚠️ Omitiendo $H (conflicto)."
      git cherry-pick --abort &>/dev/null
    fi
  done

  i=$((i+1))
done

echo "✅ Terminado: se crearon $((i-1)) ramas."
